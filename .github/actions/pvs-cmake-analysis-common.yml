Name: Prepare repo
description: Common workflow for PVS-Studio CMake Analysis
inputs:
  repository:
    required: true
    type: string
    description: 'Repository to analyse: owner/repo'
    default: "Vita3K/Vita3K"
  branch:
    description: "Branch name"
    required: true
    type: string
    default: "master"
  repo_directory:
    required: true
    type: string
    default: "src"
  PVS_USERNAME:
    type: string
  PVS_KEY:
    type: string
runs:
  using: "composite"
  steps:
  - name: Install PVS-Studio
    shell: bash
    run: |
      wget -q -O - https://files.viva64.com/etc/pubkey.txt | sudo apt-key add -
      sudo wget -O /etc/apt/sources.list.d/viva64.list https://files.viva64.com/etc/viva64.list
      sudo apt-get update
      sudo apt-get install -y pvs-studio

  - name: Configure license
    continue-on-error: true
    shell: bash
    run: |
      pvs-studio-analyzer credentials $PVS_USERNAME $PVS_KEY
    env:
      PVS_USERNAME: ${{ inputs.PVS_USERNAME }}
      PVS_KEY: ${{ inputs.PVS_KEY }}

  - name: Checkout Vita repository
    uses: actions/checkout@v4
    with:
      repository: ${{ inputs.repository }}
      ref: ${{ inputs.branch }}
      path: ${{ inputs.repo_directory }}
      fetch-depth: 0
      submodules: recursive

  - name: Set up build environment (ubuntu-22.04)
    shell: bash
    run: |
        sudo add-apt-repository -y ppa:mhier/libboost-latest
        sudo add-apt-repository universe
        sudo apt update
        sudo apt -y install ccache libboost-filesystem1.83-dev libboost-program-options1.83-dev libboost-system1.83-dev libgtk-3-dev libsdl2-dev ninja-build libfuse2

  - name: Set up SDL 2.30.9 (ubuntu-22.04)
    shell: bash
    run: |
        SDL2VER=2.30.9
        if [[ ! -e ~/.ccache ]]; then
          mkdir ~/.ccache
        fi  
        cd ~/.ccache
        if [[ ! -e SDL2-${SDL2VER} ]]; then
          curl -sLO https://libsdl.org/release/SDL2-${SDL2VER}.tar.gz
          tar -xzf SDL2-${SDL2VER}.tar.gz
          cd SDL2-${SDL2VER}
          ./configure --prefix=/usr/local
          make && cd ../
          rm SDL2-${SDL2VER}.tar.gz
        fi
        sudo make -C SDL2-${SDL2VER} install


  - name: Configure project with CMake
    shell: bash
    run: |
      cd ${{ inputs.repo_directory }}
      cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON --preset linux-ninja-clang
